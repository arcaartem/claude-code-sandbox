name: Security Scan

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:

env:
  IMAGE_NAME: devenv

jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:latest .
        docker save ${{ env.IMAGE_NAME }}:latest -o image.tar

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.IMAGE_NAME }}:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Run Trivy scanner for summary
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ env.IMAGE_NAME }}:latest'
        format: 'table'

    - name: Scan with Grype
      uses: anchore/scan-action@v6
      id: grype-scan
      with:
        image: '${{ env.IMAGE_NAME }}:latest'
        fail-build-on-sbom-upload-failure: false
        severity-cutoff: high

    - name: Upload Grype scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: ${{ steps.grype-scan.outputs.sarif }}


  dockerfile-security:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Hadolint Dockerfile linter
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
        format: sarif
        output-file: hadolint-results.sarif
        no-fail: true

    - name: Upload Hadolint scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: hadolint-results.sarif

    - name: Run Checkov on Dockerfile
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: dockerfile
        output_format: sarif
        output_file_path: checkov-results.sarif
        soft_fail: true

    - name: Upload Checkov scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: checkov-results.sarif

  security-summary:
    runs-on: ubuntu-latest
    needs: [build-and-scan, dockerfile-security]
    if: always()
    
    steps:
    - name: Security Scan Summary
      run: |
        echo "# 🔒 Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Build and Scan Job**: ${{ needs.build-and-scan.result }}" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Dockerfile Security**: ${{ needs.dockerfile-security.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📊 Check the **Security** tab for detailed vulnerability reports." >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🛡️ Scanners used:" >> $GITHUB_STEP_SUMMARY
        echo "- **Trivy**: Container vulnerability scanning" >> $GITHUB_STEP_SUMMARY
        echo "- **Grype**: Additional vulnerability detection" >> $GITHUB_STEP_SUMMARY
        echo "- **Hadolint**: Dockerfile best practices" >> $GITHUB_STEP_SUMMARY
        echo "- **Checkov**: Infrastructure security scanning" >> $GITHUB_STEP_SUMMARY
